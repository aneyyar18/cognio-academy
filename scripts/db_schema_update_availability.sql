-- Complete Database Schema Update - Tutor Availability Feature
-- Description: Complete schema including the new tutor_availability table
-- Author: Generated by Claude Code  
-- Date: 2025-09-08

-- Use the cognio database
USE cognio;

-- =====================================================
-- TUTOR AVAILABILITY TABLE (NEW)
-- =====================================================

-- Create the tutor_availability table
CREATE TABLE IF NOT EXISTS tutor_availability (
    id INT AUTO_INCREMENT PRIMARY KEY,
    tutor_id INT NOT NULL,
    day_of_week ENUM('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY') NOT NULL,
    start_time TIME NOT NULL COMMENT 'Start time in GMT',
    end_time TIME NOT NULL COMMENT 'End time in GMT',
    is_available BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    -- Foreign key constraint to tutors table
    CONSTRAINT fk_tutor_availability_tutor_id 
        FOREIGN KEY (tutor_id) REFERENCES tutors(id) 
        ON DELETE CASCADE ON UPDATE CASCADE,
        
    -- Business logic constraints
    CONSTRAINT chk_availability_time_order CHECK (start_time < end_time),
    
    -- Performance indexes
    INDEX idx_tutor_day (tutor_id, day_of_week),
    INDEX idx_tutor_availability_lookup (tutor_id, day_of_week, is_available),
    INDEX idx_availability_time_range (tutor_id, start_time, end_time)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Stores tutor weekly availability schedules with times stored in GMT timezone';

-- =====================================================
-- UTILITY VIEWS (OPTIONAL)
-- =====================================================

-- Create a view for easier availability querying
CREATE OR REPLACE VIEW tutor_weekly_availability AS
SELECT 
    ta.tutor_id,
    t.fullname as tutor_name,
    t.timezone as tutor_timezone,
    ta.day_of_week,
    ta.start_time as start_time_gmt,
    ta.end_time as end_time_gmt,
    ta.is_available,
    ta.created_at,
    ta.updated_at
FROM tutor_availability ta
JOIN tutors t ON ta.tutor_id = t.id
WHERE ta.is_available = TRUE
ORDER BY ta.tutor_id, 
    FIELD(ta.day_of_week, 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'),
    ta.start_time;

-- =====================================================
-- STORED PROCEDURES (OPTIONAL)
-- =====================================================

-- Stored procedure to get tutor availability for a specific day
DELIMITER //
CREATE PROCEDURE GetTutorAvailabilityByDay(
    IN p_tutor_id INT,
    IN p_day_of_week VARCHAR(10)
)
BEGIN
    SELECT 
        id,
        day_of_week,
        start_time as start_time_gmt,
        end_time as end_time_gmt,
        is_available,
        created_at,
        updated_at
    FROM tutor_availability 
    WHERE tutor_id = p_tutor_id 
        AND day_of_week = p_day_of_week
        AND is_available = TRUE
    ORDER BY start_time;
END //

-- Stored procedure to check if tutor is available at specific time
CREATE PROCEDURE CheckTutorAvailability(
    IN p_tutor_id INT,
    IN p_day_of_week VARCHAR(10),
    IN p_check_time TIME
)
BEGIN
    SELECT 
        COUNT(*) as is_available,
        GROUP_CONCAT(CONCAT(start_time, '-', end_time)) as available_slots
    FROM tutor_availability 
    WHERE tutor_id = p_tutor_id 
        AND day_of_week = p_day_of_week
        AND is_available = TRUE
        AND p_check_time >= start_time 
        AND p_check_time < end_time;
END //
DELIMITER ;

-- =====================================================
-- VERIFICATION QUERIES
-- =====================================================

-- Show table structure
DESCRIBE tutor_availability;

-- Show indexes
SHOW INDEXES FROM tutor_availability;

-- Show foreign key constraints
SELECT 
    CONSTRAINT_NAME,
    TABLE_NAME,
    COLUMN_NAME,
    REFERENCED_TABLE_NAME,
    REFERENCED_COLUMN_NAME
FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE 
WHERE TABLE_SCHEMA = 'cognio' 
    AND TABLE_NAME = 'tutor_availability' 
    AND REFERENCED_TABLE_NAME IS NOT NULL;

-- Count any existing records
SELECT COUNT(*) as total_availability_records FROM tutor_availability;

-- Show the view structure
DESCRIBE tutor_weekly_availability;

-- List the stored procedures
SHOW PROCEDURE STATUS WHERE Db = 'cognio' AND Name LIKE '%Availability%';